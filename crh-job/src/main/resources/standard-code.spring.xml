<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tool 
	http://www.springframework.org/schema/tool/spring-tool.xsd
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

	<import resource="classpath:standard-code-db.spring.xml" />
	<import resource="classpath:standard-code-mvc.spring.xml" />
	<import resource="classpath:standard-code-task.spring.xml" />
	<import resource="classpath:standard-code-cache.spring.xml" />
	

	<!-- enable component scanning (beware that this does not enable mapper 
		scanning!) -->
	<context:component-scan base-package="com.hengtiansoft.common.sequence,com.hengtiansoft.task"  />


	<!-- enable AspectJ -->
	<aop:aspectj-autoproxy />

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="fileEncodings" value="UTF-8" />
		<property name="cacheSeconds" value="1" />
		<property name="basenames">
			<list>
				<value>classpath:messages/error</value>
				<value>classpath:messages/message</value>
			</list>
		</property>
	</bean>

	<bean id="appConfig"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="useCodeAsDefaultMessage" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="fileEncodings" value="UTF-8" />
		<property name="cacheSeconds" value="1" />
		<property name="basenames">
			<list>
				<!-- do not change the order, app-config should be the LAST one as it 
					is the default config, see ReloadableResourceBundleMessageSource.resolveCode(String 
					code, Locale locale) -->
				<value>classpath:env/env-var</value>
				<value>classpath:app-config</value>
			</list>
		</property>
	</bean>

	<!-- do not change the order, app-config should be the FIRST one as it is 
		the default config, see PropertiesLoaderSupport.loadProperties(Properties 
		props) -->
	<context:property-placeholder
		location="classpath:app-config.properties, classpath:env/env-var.properties"
		ignore-unresolvable="true" />

	<!-- Configuration -->
	<bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>
					classpath:env/env-var.properties
				</value>
			</list>
		</property>
	</bean>
	
	<!-- 短信平台配置 -->
	<bean id="chinaIdcSolutionInfo" class="com.hengtiansoft.standard.chinaidcsolution.ChinaIdcSolutionInfo">
		<property name="appKey" value="${message.appKey}" />
		<property name="appSecret" value="${message.appSecret}" />
		<property name="nonceStr" value="${message.nonceStr}" />
		<property name="smsType" value="${message.smsType}" />
		<property name="url" value="${message.url}" />
	</bean>
	
	<bean class="com.hengtiansoft.standard.chinaidcsolution.IdcSolutionMessageOperator">
		<constructor-arg name="chinaIdcSolutionInfo" ref="chinaIdcSolutionInfo" />
	</bean>
	
	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/template/" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="tag_syntax">auto_detect</prop>
				<prop key="whitespace_stripping">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="systemName" value="吾儿网" />
				<entry key="base" value="#{servletContext.contextPath}" />
				<entry key="uiBase" value="#{servletContext.contextPath}/dist/" />
				<entry key="urlPrefix" value="#{servletContext.contextPath}/web/" />
				<entry key="static" value="${common.static.server}" />
				<entry key="shopStatic" value="${common.shop.static.server}" />
				<entry key="file" value="${common.file.server}" />
				<entry key="b2cFile" value="${b2cFile.file.server}" />
				<entry key="resourceVersion" value="${static_resource_version}" />
			</map>
		</property>	
	</bean>

</beans>